<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lectures: Numerics on COMP4187 – Parallel Scientific Computing II</title><link>https://teaching.wence.uk/comp4187/lectures/numerics/</link><description>Recent content in Lectures: Numerics on COMP4187 – Parallel Scientific Computing II</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://teaching.wence.uk/comp4187/lectures/numerics/index.xml" rel="self" type="application/rss+xml"/><item><title>Lecture 1: FD</title><link>https://teaching.wence.uk/comp4187/lectures/numerics/lecture1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/lectures/numerics/lecture1/</guid><description>The lecture will take place over zoom. A calender invite is available on duo. The zoom invite can also be found at info).
Before the lecture it would be good if you can download the ipython notebook and run it. You can see jupyter for instructions on how to run the notebook.
Alternatively, you can run the notebook online without installing python.
finite-differences After the lecture a video recording has been placed on duo.</description></item><item><title>Lecture 2: FD</title><link>https://teaching.wence.uk/comp4187/lectures/numerics/lecture2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/lectures/numerics/lecture2/</guid><description>For this lecture we continued with ipython notebook.
The notebook is also available online without installing python.
finite-differences After the lecture a video recording has been placed on duo. The video is now available at: video</description></item><item><title>Lecture 3: FD</title><link>https://teaching.wence.uk/comp4187/lectures/numerics/lecture3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/lectures/numerics/lecture3/</guid><description>We will be moving on to the next notebook during the next lecture. Before the lecture it would be good if you can download the next ipython notebook and run it. You can see jupyter for instructions on how to run the notebook.
Alternatively, you can run the notebook online without installing python.
finite-differences The video is now available at: video
The content of the whiteboard can be found below.</description></item><item><title>Lecture 4: Smoothers</title><link>https://teaching.wence.uk/comp4187/lectures/numerics/lecture4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/lectures/numerics/lecture4/</guid><description>In this lecture we will finish covering efficient matrix storage from: ipython notebook.
Alternatively, you can run the notebook online without installing python.
finite-differences After that we will start discussing efficient solvers for linear systems. This lecture will cover smoothers: ipython notebook.
Alternatively, you can run the notebook online without installing python.
smoothers-intro After the lecture have a look at the corresponding exercise.
The video is now available at: video</description></item><item><title>Lecture 5: Smoothers</title><link>https://teaching.wence.uk/comp4187/lectures/numerics/lecture5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/lectures/numerics/lecture5/</guid><description>This lecture will cover smoothers: ipython notebook.
Alternatively, you can run the notebook online without installing python.
smoothers-intro We also started on the multigrid method: ipython notebook
The video is now available at: video
The content of the whiteboard can be found below. It is also all contained in the ipython notebook itself.</description></item><item><title>Lecture 6: Multigrid</title><link>https://teaching.wence.uk/comp4187/lectures/numerics/lecture6/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/lectures/numerics/lecture6/</guid><description>We continue with the multigrid method: ipython notebook
The video is now available at: video
The content of the whiteboard can be found below. It is also all contained in the ipython notebook itself.</description></item><item><title>Lecture 7: Multigrid</title><link>https://teaching.wence.uk/comp4187/lectures/numerics/lecture7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/lectures/numerics/lecture7/</guid><description>We continue with the multigrid method: ipython notebook
The proof for Poisson can be found in:
Dietrich Braess and Wolfgang Hackbusch,A New Convergence Proof for the Multi-grid Method including the V-Cycle, SIAM J. Numer. Anal.,20, 967–975, 1983 At this point you may want to have a look at the two exercises:
On two grid: exercise. If you are unused to Fourier-analysis you will find this exercise quite challenging.</description></item><item><title>Lecture 8: Time-stepping</title><link>https://teaching.wence.uk/comp4187/lectures/numerics/lecture8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/lectures/numerics/lecture8/</guid><description>We finish the discussion of multigrid method: ipython notebook
We will begin looking at time-stepping methods (for now in an ODE setting): ipython notebook
The video is now available at: video
The content of the whiteboard can be found below. It is also all contained in the ipython notebook itself.</description></item><item><title>Lecture 9: Time-stepping</title><link>https://teaching.wence.uk/comp4187/lectures/numerics/lecture9/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/lectures/numerics/lecture9/</guid><description>We will finish time-stepping methods (for now in an ODE setting): ipython notebook and: ipython notebook.
Please go through the high-order part of the notebook on your own.
The video is now available at: video
The content of the whiteboard can be found below. It is also all contained in the ipython notebook itself.</description></item><item><title>Lecture 10: Space-time</title><link>https://teaching.wence.uk/comp4187/lectures/numerics/lecture10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/comp4187/lectures/numerics/lecture10/</guid><description>We will try to combine what we have learned in time-stepping and in spatial discretisations.
ipython notebook.
The video is now available at: video
The content of the whiteboard can be found below. It is also all contained in the ipython notebook itself.</description></item></channel></rss>