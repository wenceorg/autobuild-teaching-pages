<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Exercises on PHYS52015 – Introduction to HPC</title><link>https://teaching.wence.uk/phys52015/exercises/</link><description>Recent content in Exercises on PHYS52015 – Introduction to HPC</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://teaching.wence.uk/phys52015/exercises/index.xml" rel="self" type="application/rss+xml"/><item><title>Parallel Hello World</title><link>https://teaching.wence.uk/phys52015/exercises/hello/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/phys52015/exercises/hello/</guid><description>Hello, World! # As with every programming course, the first thing we will do is compile and run a &amp;ldquo;Hello world&amp;rdquo; program. Actually we&amp;rsquo;ll do three. The goal of this is to familiarise you with the module system on Hamilton, as well as how to compile code. So take a look at the quickstart guide if you haven&amp;rsquo;t already.
A serial version # Log in to Hamilton/COSMA load the relevant compiler modules</description></item><item><title>Vectorisation</title><link>https://teaching.wence.uk/phys52015/exercises/vectorisation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/phys52015/exercises/vectorisation/</guid><description>Vectorisation # We&amp;rsquo;ll be running these exercises on Hamilton or COSMA, so remind yourself of how to log in and transfer code if you need to.
Blurring an image # The code for this exercise is provided as a tar archive. Download and unpack it with
$ wget https://teaching.wence.uk/phys52015/code/blur_image.tgz $ tar zxvf blur_image.tgz This will create a new directory blur_image with three subdirectories.
$ cd blur_image $ ls images openmp vec The images directory contains images in PPM format for that will serve as input to our program.</description></item></channel></rss>