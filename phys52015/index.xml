<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on PHYS52015 – Introduction to HPC</title><link>https://teaching.wence.uk/phys52015/</link><description>Recent content in Introduction on PHYS52015 – Introduction to HPC</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://teaching.wence.uk/phys52015/index.xml" rel="self" type="application/rss+xml"/><item><title>Parallel Hello World</title><link>https://teaching.wence.uk/phys52015/exercises/hello/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/phys52015/exercises/hello/</guid><description>Hello, World! # As with every programming course, the first thing we will do is compile and run a &amp;ldquo;Hello world&amp;rdquo; program. Actually we&amp;rsquo;ll do three. The goal of this is to familiarise you with the module system on Hamilton, as well as how to compile code. So take a look at the quickstart guide if you haven&amp;rsquo;t already.
A serial version # Log in to Hamilton/COSMA load the relevant compiler modules</description></item><item><title>Vectorisation</title><link>https://teaching.wence.uk/phys52015/exercises/vectorisation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/phys52015/exercises/vectorisation/</guid><description>Vectorisation # We&amp;rsquo;ll be running these exercises on Hamilton or COSMA, so remind yourself of how to log in and transfer code if you need to.
Blurring an image # The code for this exercise is provided as a tar archive. Download and unpack it with
$ wget https://teaching.wence.uk/phys52015/code/blur_image.tgz $ tar zxvf blur_image.tgz This will create a new directory blur_image with three subdirectories.
$ cd blur_image $ ls images openmp vec The images directory contains images in PPM format for that will serve as input to our program.</description></item><item><title>Acknowledgements</title><link>https://teaching.wence.uk/phys52015/acknowledgements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/phys52015/acknowledgements/</guid><description>Acknowledgements &amp;amp; further reading #</description></item><item><title>Hamilton access &amp; quickstart</title><link>https://teaching.wence.uk/phys52015/setup/hamilton-quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/phys52015/setup/hamilton-quickstart/</guid><description>Accessing Durham Supercomputing facilities # Most of the exercises in this course will require that you use one of Durham&amp;rsquo;s supercomputing systems. This will either be Hamilton, or (for some Physics students) COSMA. You don&amp;rsquo;t automatically get an account on Hamilton, so you&amp;rsquo;ll need to register for one.
Access to Hamilton # For many of the exercises in the course, we will be using the Hamilton supercomputer. You should obtain an account on Hamilton by following their instructions.</description></item><item><title>ssh configuration</title><link>https://teaching.wence.uk/phys52015/setup/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/phys52015/setup/configuration/</guid><description>ssh tips &amp;amp; tricks # Setting up simpler logins # It can be tedious to remember to type long login commands every time when logging in via ssh to hamilton. I therefore recommend that you set up an ssh config file.
Additionally, you might also want to set up ssh keys for passwordless login.
The ssh-config configuration file # Mac/Linux When you run ssh it reads a configuration file at $HOME/.</description></item><item><title>Unix resources</title><link>https://teaching.wence.uk/phys52015/setup/unix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://teaching.wence.uk/phys52015/setup/unix/</guid><description>Using Unix-like systems for computational science # This course presupposes some level of familiarity with commandline interfaces. You have encountered these already in the previous term. In case you need a quick refresher, I recommend the material produced by the Software Carpentry project.
They have a number of useful lessons and materials providing introductory training on how to do things like use the Unix shell, version control with git, and some introductory programming and plotting in Python.</description></item></channel></rss>